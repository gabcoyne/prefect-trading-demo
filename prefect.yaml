# Prefect deployment configuration for Trading Partition Demo
# Deploy to Prefect Cloud using: prefect deploy --all
#
# This will automatically:
# 1. Build Docker image for linux/amd64
# 2. Push to ECR registry
# 3. Register both parent and child deployments

# Define project-level settings
name: Trading Partition Demo
prefect-version: 3.0.0

# Build steps - build and push Docker image automatically
build:
  - prefect_docker.deployments.steps.build_docker_image:
      id: build-image
      requires: prefect-docker>=0.5.0
      image_name: "455346737763.dkr.ecr.us-east-2.amazonaws.com/se-demos/trading-partition-demo"
      tag: "latest"
      platform: "linux/amd64"
      dockerfile: "Dockerfile"
      nocache: true
  - prefect.deployments.steps.run_shell_script:
      id: ecr-login
      script: sh -c "aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 455346737763.dkr.ecr.us-east-2.amazonaws.com"
      stream_output: true
  - prefect_docker.deployments.steps.push_docker_image:
      requires: prefect-docker>=0.5.0
      image_name: "{{ build-image.image }}"
      tag: "{{ build-image.tag }}"

# Pull steps - used by workers to pull the image
pull:
  - prefect.deployments.steps.set_working_directory:
      directory: /app

# Deployment definitions
deployments:
  # 1. Main Orchestrator - Top-level coordinator
  - name: orchestrator
    version: null
    tags: ["orchestrator", "parent"]
    description: "Orchestrates trading pipeline: triggers parallel symbol analysis flows"
    entrypoint: flows/orchestrator_flow.py:trading_orchestrator
    parameters:
      num_contracts: 10
    work_pool:
      name: demo_eks
      work_queue_name: null
      job_variables:
        image: "{{ build-image.image }}"
        image_pull_policy: Always
    schedules: []

  # 2. Symbol Flow - Per-contract analysis with market context
  - name: analyze-symbol
    version: null
    tags: ["symbol", "analysis", "market-context"]
    description: "Analyze single contract across all timestamps with VIX/SPX/beta enrichment"
    entrypoint: flows/analyze_symbol_flow.py:analyze_symbol
    parameters:
      contract: "AAPL"
    work_pool:
      name: demo_eks
      work_queue_name: null
      job_variables:
        image: "{{ build-image.image }}"
        image_pull_policy: Always
    schedules: []
